AWSTemplateFormatVersion: 2010-09-09

Parameters:
  CustomDomainParameter:
    Type: 'String'
    Description: 'Enter the domain name where you want to host the distribution.'
  CertificateARNParameter:
    Type: 'String'
    Description: 'Enter the ARN of a certificate in region us-east-1.'

Outputs:
  DomainName:
    Description: 'The domain name where the distribution can be reached.'
    Value: !GetAtt ExampleDistribution.DomainName

Resources:
  ExampleIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Identity for example distribution'

  ExampleBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: CustomDomainParameter
      AccessControl: 'Private'

  ExampleBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ExampleBucket
      PolicyDocument:
        Statement:
          -
            Effect: 'Allow'
            Action: 's3:GetObject'
            Resource: !Sub '${ExampleBucket.Arn}/*'
            Principal:
              CanonicalUser:
                !GetAtt ExampleIdentity.S3CanonicalUserId

  ExampleDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - Ref: CustomDomainParameter
        DefaultRootObject: 'index.html'
        Enabled: true
        PriceClass: 'PriceClass_100'
        HttpVersion: 'http2'

        ViewerCertificate:
          AcmCertificateArn:
            Ref: CertificateARNParameter
          MinimumProtocolVersion: 'TLSv1.1_2016'
          SslSupportMethod: 'sni-only'

        Origins:
          - DomainName: !GetAtt ExampleBucket.DomainName
            Id: 'example'
            S3OriginConfig:
              OriginAccessIdentity:
                !Join
                - ''
                - - 'origin-access-identity/cloudfront/'
                  - Ref: ExampleIdentity

        DefaultCacheBehavior:
          ViewerProtocolPolicy: 'redirect-to-https'
          TargetOriginId: 'example'
          AllowedMethods:
            - 'GET'
            - 'HEAD'
          CachedMethods:
            - 'GET'
            - 'HEAD'
          Compress: true
          DefaultTTL: 0
          MaxTTL: 0
          MinTTL: 0
          TrustedSigners:
            - Ref: AWS::AccountId
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: 'none'

        CacheBehaviors:
          - PathPattern: '/error-pages/*'
            ViewerProtocolPolicy: 'redirect-to-https'
            TargetOriginId: 'example'
            AllowedMethods:
              - 'GET'
              - 'HEAD'
            CachedMethods:
              - 'GET'
              - 'HEAD'
            Compress: true
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: 'none'
          - PathPattern: '/assets/*'
            ViewerProtocolPolicy: 'redirect-to-https'
            TargetOriginId: 'example'
            AllowedMethods:
              - 'GET'
              - 'HEAD'
            CachedMethods:
              - 'GET'
              - 'HEAD'
            Compress: true
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: 'none'
          - PathPattern: '/callback.html'
            ViewerProtocolPolicy: 'redirect-to-https'
            TargetOriginId: 'example'
            AllowedMethods:
              - 'GET'
              - 'HEAD'
            CachedMethods:
              - 'GET'
              - 'HEAD'
            Compress: true
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: 'none'

        CustomErrorResponses:
          - ErrorCachingMinTTL: 0
            ErrorCode: 403
            ResponseCode: 403
            ResponsePagePath: '/error-pages/403.html'
          - ErrorCachingMinTTL: 0
            ErrorCode: 404

        Restrictions:
          GeoRestriction:
            RestrictionType: 'none'
